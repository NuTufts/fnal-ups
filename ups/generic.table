#   $RCSfile$
#   $Revision$
#   $Date$
FILE = TABLE
GROUP:

Flavor=ANY
Qualifiers=""
    ACTION = setup
        exeActionRequired("setup__")

# ADD qualified instances here. For example:
#Flavor=Linux+2.6
#Qualifiers="debug"
#    ACTION = setup
#        setupRequired( test_boost -j v1_0 )
#        envSet( XX, yy )
#        exeActionRequired("setup__")

COMMON:
   ACTION = setup__
        setupEnv()
        proddir()

	# For unsetup, "if(cmd)" and "unless(cmd)" cmd's happen but the stuff within does not
	# For unsetup, the "execute" statements do not happen but the if/unless statements do
	execute( test $?shell = 1 || eval 'setenv() { sts=$?; export $1; eval "$1=\"\${2-}\""; return $sts; };unsetenv() { unset "$@"; }', NO_UPS_ENV )

	execute( setenv _FQ `sh -c 'expr "$${UPS_PROD_NAME_UC}_FQ" : "\(..*\)" || for dd in ${UPS_PROD_DIR} $UPS_DIR;do ff=$dd/ups/ups_FQ;if [ -x $ff ];then $ff ups_env;exit $?;fi;done'`, UPS_ENV )
	envSet( ${UPS_PROD_NAME_UC}_FQ, $_FQ )

	# These are use by other products' build system
	# double(2) double-quotes(") is a bit of trick - ups is enclosing things inside of double quotes so it thinks it can strip off the first and last...
	# double(2) double-quotes(") is needed to be shell independent - to work on cshell or bourne shell
	prodDir( _INC, ""`sh -c 'for dd in $${UPS_PROD_NAME_UC}_FQ/ "";do for ii in ${UPS_PROD_NAME} inc include h;do [ -d ${UPS_PROD_DIR}/${dd}$ii ] && echo ${dd}$ii && exit;done;done'`"" )
	prodDir( _LIB, ""`sh -c 'for dd in $${UPS_PROD_NAME_UC}_FQ/lib lib/$${UPS_PROD_NAME_UC}_FQ lib.$${UPS_PROD_NAME_UC}_FQ;do [ -d ${UPS_PROD_DIR}/$dd ] && echo $dd && exit;done;echo .'`"" )

	prodDir( _BIN, ""`sh -c 'for dd in $${UPS_PROD_NAME_UC}_FQ/bin bin/$${UPS_PROD_NAME_UC}_FQ bin.$${UPS_PROD_NAME_UC}_FQ;do [ -d ${UPS_PROD_DIR}/$dd ] && echo $dd && exit;done;echo .'`"" )
	prodDir( _SBIN, ""`sh -c 'for dd in $${UPS_PROD_NAME_UC}_FQ/sbin sbin/$${UPS_PROD_NAME_UC}_FQ sbin.$${UPS_PROD_NAME_UC}_FQ;do [ -d ${UPS_PROD_DIR}/$dd ] && echo $dd && exit;done;echo .'`"" )

	prodDir( _MAN, ""`sh -c 'for dd in $${UPS_PROD_NAME_UC}_FQ/ "";do for ii in man share/man;do [ -d ${UPS_PROD_DIR}/${dd}$ii ] && echo ${dd}$ii && exit;done;done'`"" )

	pathPrepend(PATH, ${${UPS_PROD_NAME_UC}_BIN}, :)
	pathPrepend(PATH, ${${UPS_PROD_NAME_UC}_SBIN}, :)
	pathPrepend(PATH, ${UPS_PROD_DIR}/bin, :)
	envPrepend( LD_LIBRARY_PATH, ${${UPS_PROD_NAME_UC}_LIB}, :)

	envSetIfNotSet( MANPATH, "`man -w`" )
	envPrepend( MANPATH, ${${UPS_PROD_NAME_UC}_MAN}, :)

	if    ( test ! -d ${UPS_PROD_DIR}/bin )
	    pathRemove( PATH, ${UPS_PROD_DIR}/bin, :)
	else()
	  if    ( test "${${UPS_PROD_NAME_UC}_FQ}" = . || test ! -d $${UPS_PROD_NAME_UC}_BIN )
	    pathRemove( PATH, $${UPS_PROD_NAME_UC}_BIN, :)
	    # must leave _BIN (and _LIB (below)) env for pathRemove which will happen during unsetup (un-action for pathPrepend)
	  endif ( test "${${UPS_PROD_NAME_UC}_FQ}" = . || test ! -d $${UPS_PROD_NAME_UC}_BIN )
	endif ( test ! -d ${UPS_PROD_DIR}/bin )

	if    ( test ! -d ${UPS_PROD_DIR}/sbin )
	    pathRemove( PATH, ${UPS_PROD_DIR}/sbin, :)
	endif ( test ! -d ${UPS_PROD_DIR}/sbin )
	if    ( test "${${UPS_PROD_NAME_UC}_FQ}" = . || test ! -d $${UPS_PROD_NAME_UC}_SBIN )
	    pathRemove( PATH, $${UPS_PROD_NAME_UC}_SBIN, :)
	endif ( test "${${UPS_PROD_NAME_UC}_FQ}" = . || test ! -d $${UPS_PROD_NAME_UC}_SBIN )

	if    ( test ! -d ${${UPS_PROD_NAME_UC}_LIB} )
	    envRemove( LD_LIBRARY_PATH, ${${UPS_PROD_NAME_UC}_LIB}, :)
	endif ( test ! -d ${${UPS_PROD_NAME_UC}_LIB} )

	if    ( test ! -d ${${UPS_PROD_NAME_UC}_MAN} )
	    envRemove( MANPATH, ${${UPS_PROD_NAME_UC}_MAN}, :)
	endif ( test ! -d ${${UPS_PROD_NAME_UC}_MAN} )

	execute( unsetenv _FQ && unset setenv unsetenv, NO_UPS_ENV )

	# ADD common env vars here
END:
